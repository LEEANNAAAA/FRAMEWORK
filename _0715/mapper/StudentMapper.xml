<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--   현재 Mapper 파일(SQL문들의 집합)의 고유한 이름을 namespace 속성에 지정 -->
<!-- 일반적으로 여기 등록된 SQL문들을 실행할 인터페이스의 이름과 동일하게 설정  -->
<mapper namespace="kr.ac.kopo.student.StudentDao">

<resultMap type="StudentVo" id="StudentMap">
	<id property="stuNo" column="stu_no"/>
	<result property="stuName" column="stu_name"/>
	<result property="stuScore" column="stu_score"/>	
</resultMap>

<!-- 	실행할 SQL문과 동일한 이름의 엘리먼트를 사용하여 SQL문을 등록 -->
<!-- 	SQL문의 고유한 이름을 id속성에 지정 -->
<!-- 	보통 SQL문을 실행할 때 사용할 인터페이스의 메서드 이름과 동일하게 설정 -->
<!-- 실행결과 레코드 1개를 담을 자바객체의 클래스명을 resultType 속성에 지정 -->

  <select id="selectStudentList" resultType="StudentVo">
	SELECT stu_no, stu_name, stu_score  	
	FROM student
  </select>
  
<!--   실행헤 필요한 값을 받는 경우에는, 받을 값을 타입을 parameterType 속성에 지정 / java.lang.String으로 써야하는걸 string으로 축약 -->
  <select id="selectStudent" parameterType="string" resultType="StudentVo">
  	SELECT stu_no, stu_name, stu_score
  	FROM student
  	WHERE stu_no = #{stuNo}
  </select>
  
<!--   파라미터로 받은 객체의 속성(변수)값을 SQL문에 주입하기 위해서 #{변수명} 을 사용 -->
  <insert id="insertStudent" parameterType="StudentVo" >
  	INSERT INTO student (stu_no, stu_name, stu_score)
	VALUES (#{stuNo},#{stuName},#{stuScore})
  </insert>
  
  <update id="updateStudent" parameterType="StudentVo">
  	UPDATE student
  	SET  stu_name=#{stuName}, stu_score=#{stuScore} 
  	WHERE stu_no=#{stuNo}

  </update>
  
<!--   parameterType 이 단일값을 갖는 객체인 경우 (String, Integer,..)에는 #{}의 이름은 무엇을 사용하든 상관없음 -->
  <delete id="deleteStudent" parameterType="string">
  	DELETE FROM student 
  	WHERE stu_no=#{stuNo}
  </delete>
  
  
</mapper>